const axios = require('axios');

async function testTrackingAPI() {
  console.log('üîç Test de l\'API de suivi de commandes...\n');

  try {
    // D'abord, r√©cup√©rer une commande existante pour obtenir son code de tracking
    console.log('üì¶ R√©cup√©ration des commandes...');
    
    try {
      const ordersResponse = await axios.get('http://localhost:9000/api/orders');
      console.log('‚ùå L\'API des commandes n√©cessite une authentification');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('üîê API des commandes prot√©g√©e (normal)');
      }
    }

    // Test avec un code de tracking fictif
    console.log('\nüß™ Test avec un code de tracking fictif...');
    
    try {
      const trackingResponse = await axios.get('http://localhost:9000/api/tracking/TRK-TEST-123');
      console.log('‚úÖ R√©ponse de tracking:', trackingResponse.data);
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚úÖ API de tracking fonctionne (404 pour code inexistant)');
      } else {
        console.log('‚ùå Erreur inattendue:', error.response?.status, error.response?.data);
      }
    }

    // Test de recherche par email
    console.log('\nüìß Test de recherche par email...');
    
    try {
      const searchResponse = await axios.post('http://localhost:9000/api/tracking/search', {
        email: 'ahmedzekri143@gmail.com'
      });
      console.log('‚úÖ Commandes trouv√©es:', searchResponse.data);
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚úÖ Aucune commande trouv√©e pour cet email (normal si premi√®re commande)');
      } else {
        console.log('‚ùå Erreur:', error.response?.status, error.response?.data);
      }
    }

    // Instructions pour tester avec une vraie commande
    console.log('\nüìã Instructions pour tester avec une vraie commande:');
    console.log('1. Allez sur http://localhost:5173/admin/orders');
    console.log('2. Trouvez votre commande et notez le code TRK-...');
    console.log('3. Testez avec: curl http://localhost:9000/api/tracking/[VOTRE-CODE]');
    console.log('4. Ou allez sur http://localhost:5173/track-order');

    // Test de l'endpoint de sant√©
    console.log('\nüè• Test de l\'endpoint de sant√©...');
    try {
      const healthResponse = await axios.get('http://localhost:9000/api/health');
      console.log('‚úÖ Serveur en bonne sant√©:', healthResponse.data);
    } catch (error) {
      console.log('‚ùå Probl√®me de sant√© du serveur:', error.message);
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüîß Solutions:');
      console.log('1. V√©rifiez que le serveur backend est d√©marr√©');
      console.log('2. V√©rifiez que le port 9000 est correct');
      console.log('3. Lancez: cd backend && npm run dev');
    }
  }
}

// Fonction pour tester avec un code de tracking sp√©cifique
async function testSpecificTracking(trackingCode) {
  console.log(`\nüéØ Test avec le code: ${trackingCode}`);
  
  try {
    const response = await axios.get(`http://localhost:9000/api/tracking/${trackingCode}`);
    console.log('‚úÖ Commande trouv√©e:');
    console.log('- Num√©ro:', response.data.orderNumber);
    console.log('- Statut:', response.data.status);
    console.log('- Client:', response.data.customer.name);
    console.log('- Total:', response.data.totalAmount, 'TND');
    console.log('- Cr√©√©e le:', new Date(response.data.createdAt).toLocaleString());
    
    if (response.data.timeline) {
      console.log('- Timeline:', response.data.timeline.length, '√©tapes');
    }
  } catch (error) {
    if (error.response?.status === 404) {
      console.log('‚ùå Code de tracking non trouv√©');
    } else {
      console.log('‚ùå Erreur:', error.response?.status, error.response?.data);
    }
  }
}

// Ex√©cuter le test
testTrackingAPI();

// Si vous voulez tester un code sp√©cifique, d√©commentez la ligne suivante et remplacez par votre code
// testSpecificTracking('TRK-1735659516825-ABC123');
